<project default="filtering">
	
	<!-- Prepare the BPMN model for processing with Epsilon --> 
	<target name="loadBPMNModel">
		<!-- epsilon.emf.register file="metamodels/BPMN20.ecore" /-->
		<epsilon.emf.loadModel
			name="bpmn_input"
			read="true"
			store="false"
			metamodeluri="http://www.omg.org/spec/BPMN/20100524/MODEL-XMI"
			
			modelfile="models/Preprocessing_with_DataObjects_WithNoIO.bpmn2"
		/>
		<!-- metamodelfile="metamodels/BPMN20.ecore" -->
	</target>
	
	<!-- First check that our BPMN is well-formed -->
	<target name="validate" depends="loadBPMNModel">
		<!-- Note that this task will fail if the model is not valid due to the failonerrors=true attribute. -->
		<epsilon.evl src="src/BPMN_Validation.evl" failonerrors="true">
			<model ref="bpmn_input" />
		</epsilon.evl>
	</target>
	
	<!-- Next prepare a new and empty preprocessed model for use in the Flock and EPL scripts -->
	<target name="loadMigrationModel">
		<epsilon.emf.register file="metamodels/BPMN2_Simplified.ecore" />
		<epsilon.emf.loadModel
			name="preprocessed"
			read="false"
			store="true"
			metamodeluri="http://BPMN/Simplified"
			modelfile="models/output_filtered.pm"
		/>
	</target>
	
		
	<!-- Invoke Flock to migrate and normalize the input bpmn, and then
	     invoke EPL to filter the process model -->
	<target name="normalization" depends="validate,loadMigrationModel">
		<epsilon.flock src="src/Preprocessing.mig" originalModel="Original" migratedModel="Migrated">
			<model ref="bpmn_input" as="Original"/>
			<model ref="preprocessed" as="Migrated"/>
		</epsilon.flock>
		
		<epsilon.storeModel model="preprocessed" target="models/output_preprocessed.pm"	/>
		<!-- Copy the preprocessed file, just for checking -->
		<!-- copy tofile="models/output_preprocessed.pm" file="models/output_filtered.pm"/-->
	</target>	
		
	<target name="filtering" depends="normalization">
		<!-- Apply the Filtering rules -->
		<epsilon.epl src="src/filtering.epl" repeatWhileMatches="true">
			<model ref="preprocessed"/>
		</epsilon.epl>
	</target>	
		
		
		<!-- Force Eclipse to refresh our project so we can see the newly generated path.html file -->
		<!-- eclipse.refreshLocal resource="org.eclipse.epsilon.examples.workflow.flowchart" depth="-1" /-->
	
	
	<!-- Next store the filtered output model -->
	<!-- target name="StoreFilteredModel">
		<epsilon.emf.storeModel
				name="filtered"
				read="true"
				store="true"
				target="models/output_filtered.pm"
		/>
	</target-->
</project>