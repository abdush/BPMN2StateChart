--import "../../petrinet_mapping/src_tgt_traceability.eol";

pre pn2sc_Map {
	var pn_sc_map = new Map;
}

retype Net to Statechart
migrate Net {
	migrated.topState = new SC!AND;
	migrated.topState.contains.addAll(original.transitions.equivalent());
}

retype Place to Basic
migrate Place {
	var container = new SC!OR;
	container.name = original.name.replace("P", "O");
	container.contains.add(migrated);
	original.cnet.equivalent().topState.contains.add(container);
}

retype Transition to HyperEdge
migrate Transition {
	migrated.rnext = original.prep.equivalent();
	migrated.next = original.postp.equivalent();
}

post map_equivalent {
	pn_link_sc();
	getEquivalenceMap().println();
}

@cached
operation pn_link_sc() : Map {
	for (node in PN!Place.all) {
		pn_sc_map.put(node, node.equivalent());
	}
	for (node in PN!Transition.all) {
		pn_sc_map.put(node, node.equivalent());
	}
	--getEquivalenceMap().println();
	return pn_sc_map;
}

@cached	
operation getEquivalenceMap() : Map {
	return pn_link_sc();
}
