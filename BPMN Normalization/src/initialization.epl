pattern ActivityWithMultipleOutgoingSequenceFlows 
	process: Process,
	activity: Activity
		from: process.flowElements
		guard: activity.outgoing.size() > 1 {
	
	match {
		return activity.outgoing.forAll(s| s.conditionExpression.isUndefined());
	}
	
	onmatch {
		process.println("Process..");
		activity.println("Match Activity..");
	}
	
	do {
		
		activity.outgoing.println("Do Activity..");
		process.addFork(activity);
	}
	
	nomatch {
		process.println("Process..");
		activity.println("NoMatch Activity..");
	}		
}

pattern ActivityWithMultipleIncomingSequenceFlows 
	process: Process,
	activity: Activity
		from: process.flowElements
		guard: activity.incoming.size() > 1 {
	
	match {
		return activity.incoming.forAll(s| s.conditionExpression.isUndefined());
	}
	
	onmatch {
		process.println("Process..");
		activity.println("Match Activity..");
	}
	
	do {
		
		activity.outgoing.println("Do Activity..");
		process.addMerge(activity);
	}
	
	nomatch {
		process.println("Process..");
		activity.println("NoMatch Activity..");
	}		
}


operation Process addFork(task: Activity) : Boolean {
					var sequenceFlow: new SequenceFlow;
					var fork: new ParallelGateway;
					
					--Set a unique id for the gateway!!?? 
					fork.id = "fork_id123";
					
					fork.gatewayDirection = GatewayDirection#Diverging;
					//var seqFlows = SequenceFlow.all.select(s|s.sourceRef = self);
					//seqFlows.println();
					//self.outgoing.println();
					fork.outgoing.addAll(task.outgoing);
					//fork.outgoing.println();
					sequenceFlow.sourceRef = task;
					sequenceFlow.targetRef = fork;
					
					--get the process which contains the task (self))!??
					//Process.all.first().flowElements.add(sequenceFlow);
					//Process.all.first().flowElements.add(fork);
					self.flowElements.add(sequenceFlow);
					self.flowElements.add(fork);
	
}

operation Process addMerge(task: Activity) : Boolean {
	var sequenceFlow: new SequenceFlow;
					var merge: new ExclusiveGateway;
					
					--Set a unique id for the gateway!!?? 
					merge.id = "merge_id123";
					
					merge.gatewayDirection = GatewayDirection#Converging;
					//var seqFlows = SequenceFlow.all.select(s|s.targetRef = self);
					//seqFlows.println();
					//self.incoming.println();
					merge.incoming.addAll(task.incoming);
					//merge.incoming.println();
					sequenceFlow.sourceRef = merge;
					sequenceFlow.targetRef = task;
					
					--get the process which contains the task (self))!??
					self.flowElements.add(sequenceFlow);
					self.flowElements.add(merge);
}